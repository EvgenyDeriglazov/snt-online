# Generated by Django 3.0.2 on 2020-06-02 12:02

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import index.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ChairMan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(help_text='Введите имя', max_length=50, validators=[index.models.validate_human_names], verbose_name='Имя')),
                ('middle_name', models.CharField(help_text='Введите отчество', max_length=50, validators=[index.models.validate_human_names], verbose_name='Отчество')),
                ('last_name', models.CharField(help_text='Введите фамилию', max_length=50, validators=[index.models.validate_human_names], verbose_name='Фамилия')),
                ('phone', models.CharField(blank=True, help_text='Укажите номер в формате +7xxxxxxxxxx', max_length=12, null=True, unique=True, validators=[index.models.validate_phone], verbose_name='Номер телефона')),
                ('email', models.EmailField(blank=True, help_text='Адрес электронной почты', max_length=254, null=True, unique=True, verbose_name='Почта')),
                ('join_date', models.DateField(help_text='Укажите дату вступления в должность', verbose_name='Дата вступления в должность')),
                ('leave_date', models.DateField(blank=True, help_text='Укажите дату ухода с должности', null=True, verbose_name='Дата ухода с должности')),
                ('user', models.OneToOneField(blank=True, help_text='Аккаунт пользователя на сайте', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Логин')),
            ],
            options={
                'verbose_name': 'председатель',
                'verbose_name_plural': 'председатели',
            },
        ),
        migrations.CreateModel(
            name='Snt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Полное название СНТ', max_length=200, verbose_name='Название СНТ')),
                ('personal_acc', models.CharField(help_text='Номер расчетного счета (20-и значное число)', max_length=20, validators=[index.models.validate_number, index.models.validate_20_length], verbose_name='Номер расчетного счета')),
                ('bank_name', models.CharField(help_text='Наименование банка получателя', max_length=45, verbose_name='Наименование банка получателя')),
                ('bic', models.CharField(help_text='БИК (9-и значное число)', max_length=9, validators=[index.models.validate_number, index.models.validate_9_length], verbose_name='БИК')),
                ('corresp_acc', models.CharField(help_text='Номер кор./счета (20-и значное число)', max_length=20, validators=[index.models.validate_number, index.models.validate_20_length], verbose_name='Номер кор./счета')),
                ('inn', models.CharField(help_text='ИНН (10-и значное число)', max_length=10, validators=[index.models.validate_number, index.models.validate_10_length], verbose_name='ИНН')),
                ('kpp', models.CharField(help_text='КПП (9-и значное число)', max_length=9, validators=[index.models.validate_number, index.models.validate_9_length], verbose_name='КПП')),
                ('address', models.CharField(help_text='Полный адрес садоводства включая область и р-он', max_length=200, verbose_name='Адрес')),
                ('chair_man', models.OneToOneField(help_text='председатель садоводства', null=True, on_delete=django.db.models.deletion.SET_NULL, to='index.ChairMan', verbose_name='председатель')),
            ],
            options={
                'verbose_name': 'СНТ',
                'verbose_name_plural': 'СНТ',
            },
        ),
        migrations.CreateModel(
            name='Owner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_name', models.CharField(help_text='Введите фамилию', max_length=50, validators=[index.models.validate_human_names], verbose_name='Фамилия')),
                ('first_name', models.CharField(help_text='Введите имя', max_length=50, validators=[index.models.validate_human_names], verbose_name='Имя')),
                ('middle_name', models.CharField(help_text='Введите отчество', max_length=50, validators=[index.models.validate_human_names], verbose_name='Отчество')),
                ('phone', models.CharField(blank=True, help_text='Укажите номер в формате +7xxxxxxxxxx', max_length=12, null=True, unique=True, validators=[index.models.validate_phone], verbose_name='Номер телефона')),
                ('email', models.EmailField(blank=True, help_text='Адрес электронной почты', max_length=254, null=True, unique=True, verbose_name='Почта')),
                ('join_date', models.DateField(help_text='Укажите дату вступления в члены СНТ', verbose_name='Дата вступления в СНТ')),
                ('leave_date', models.DateField(blank=True, help_text='Укажите дату выхода из членов СНТ', null=True, verbose_name='Дата выхода из СНТ')),
                ('user', models.OneToOneField(blank=True, help_text='Аккаунт пользователя на сайте', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Логин')),
            ],
            options={
                'verbose_name': 'владелец',
                'verbose_name_plural': 'владельцы',
            },
        ),
        migrations.CreateModel(
            name='LandPlot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plot_number', models.CharField(help_text='Номер участка', max_length=10, unique=True, verbose_name='Номер участка')),
                ('plot_area', models.PositiveIntegerField(help_text='Единица измерения кв.м', verbose_name='Размер участка')),
                ('owner', models.ForeignKey(help_text='Владелец участка', null=True, on_delete=django.db.models.deletion.SET_NULL, to='index.Owner', verbose_name='Владелец участка')),
                ('snt', models.ForeignKey(help_text='Расположен в СНТ', null=True, on_delete=django.db.models.deletion.SET_NULL, to='index.Snt', verbose_name='СНТ')),
            ],
            options={
                'verbose_name': 'участок',
                'verbose_name_plural': 'участки',
            },
        ),
        migrations.CreateModel(
            name='Info',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pub_date', models.DateTimeField(auto_now_add=True, help_text='Дата и время публикации', verbose_name='Дата публикации')),
                ('title', models.CharField(help_text='Заголовок объявления', max_length=200, verbose_name='Заголовок')),
                ('body', models.TextField(help_text='Текст объявления', verbose_name='Текст')),
                ('status', models.CharField(choices=[('published', 'Опубликовано'), ('unpublished', 'Неопубликовано')], default='unpublished', help_text='Выберите статус для публикации или снятия с публикации', max_length=11, verbose_name='Статус')),
                ('author', models.ForeignKey(help_text='Автор объявления (действующий председатель)', on_delete=django.db.models.deletion.CASCADE, to='index.ChairMan', verbose_name='Автор')),
            ],
            options={
                'verbose_name': 'информация',
                'verbose_name_plural': 'информация',
            },
        ),
        migrations.CreateModel(
            name='Docs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('upload_date', models.DateField(auto_now_add=True, help_text='Дата загрузки документа', verbose_name='Дата загрузки')),
                ('title', models.CharField(help_text='Укажите название документа', max_length=200, verbose_name='Название документа')),
                ('upload', models.FileField(help_text='Выберите файл для загрузки', upload_to=index.models.upload_directory, verbose_name='Файл документа')),
                ('status', models.CharField(choices=[('published', 'Опубликовано'), ('unpublished', 'Неопубликовано')], default='unpublished', help_text='Выберите статус для публикации или снятия с публикации', max_length=11, verbose_name='Статус')),
                ('doc_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'документ',
                'verbose_name_plural': 'документы',
            },
        ),
        migrations.CreateModel(
            name='Accountant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_name', models.CharField(help_text='Введите фамилию', max_length=50, validators=[index.models.validate_human_names], verbose_name='Фамилия')),
                ('first_name', models.CharField(help_text='Введите имя', max_length=50, validators=[index.models.validate_human_names], verbose_name='Имя')),
                ('middle_name', models.CharField(help_text='Введите отчество', max_length=50, validators=[index.models.validate_human_names], verbose_name='Отчество')),
                ('phone', models.CharField(blank=True, help_text='Укажите номер в формате +7xxxxxxxxxx', max_length=12, null=True, unique=True, validators=[index.models.validate_phone], verbose_name='Номер телефона')),
                ('email', models.EmailField(blank=True, help_text='Адрес электронной почты', max_length=254, null=True, unique=True, verbose_name='Почта')),
                ('join_date', models.DateField(help_text='Укажите дату вступления в должность', verbose_name='Дата вступления в должность')),
                ('leave_date', models.DateField(blank=True, help_text='Укажите дату ухода с должности', null=True, verbose_name='Дата ухода с должности')),
                ('user', models.OneToOneField(blank=True, help_text='Аккаунт пользователя на сайте', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Логин')),
            ],
            options={
                'verbose_name': 'бухгалтер',
                'verbose_name_plural': 'бухгалтеры',
            },
        ),
        migrations.AddConstraint(
            model_name='owner',
            constraint=models.UniqueConstraint(condition=models.Q(('join_date__isnull', False), ('leave_date__isnull', True)), fields=('last_name', 'first_name', 'middle_name', 'join_date', 'leave_date'), name='index_owner_active_owner_duplicate_constraint'),
        ),
        migrations.AddConstraint(
            model_name='owner',
            constraint=models.UniqueConstraint(fields=('email',), name='index_owner_email_unique_constraint'),
        ),
        migrations.AddConstraint(
            model_name='owner',
            constraint=models.UniqueConstraint(fields=('phone',), name='index_owner_phone_unique_constraint'),
        ),
        migrations.AddConstraint(
            model_name='landplot',
            constraint=models.UniqueConstraint(fields=('plot_number',), name='index_landplot_plot_number_unique_constraint'),
        ),
        migrations.AddConstraint(
            model_name='chairman',
            constraint=models.UniqueConstraint(fields=('join_date',), name='index_chairman_join_date_unique_constraint'),
        ),
        migrations.AddConstraint(
            model_name='chairman',
            constraint=models.UniqueConstraint(fields=('leave_date',), name='index_chairman_leave_date_unique_constraint'),
        ),
        migrations.AddConstraint(
            model_name='chairman',
            constraint=models.UniqueConstraint(condition=models.Q(('join_date__isnull', False), ('leave_date__isnull', True)), fields=('join_date', 'leave_date'), name='index_chairman_join_date_not_null_leave_date_null_unique_constraint'),
        ),
        migrations.AddConstraint(
            model_name='accountant',
            constraint=models.UniqueConstraint(condition=models.Q(('join_date__isnull', False), ('leave_date__isnull', True)), fields=('join_date', 'leave_date'), name='index_accountant_join_date_not_null_leave_date_null_unique_constraint'),
        ),
        migrations.AddConstraint(
            model_name='accountant',
            constraint=models.UniqueConstraint(fields=('email',), name='index_accountant_email_unique_constraint'),
        ),
        migrations.AddConstraint(
            model_name='accountant',
            constraint=models.UniqueConstraint(fields=('phone',), name='index_accountant_phone_unique_constraint'),
        ),
    ]
