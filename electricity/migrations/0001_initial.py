# Generated by Django 3.0.5 on 2020-05-25 17:51

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('index', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ECounter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reg_date', models.DateField(help_text='Укажите дату установки нового э/счетчика или приемки к учету в веб приложении уже имеющегося', verbose_name='Дата регистрации')),
                ('model_name', models.CharField(help_text='Укажите название модели э/счетчика', max_length=100, verbose_name='Название модели')),
                ('sn', models.CharField(help_text='Укажите серийный номер э/счетчика', max_length=50, verbose_name='Серийный номер')),
                ('model_type', models.CharField(choices=[('single', 'Однотарифный'), ('double', 'Двухтарифный')], help_text='Выберите тип э/счетчика', max_length=6, verbose_name='Тип')),
                ('s', models.PositiveIntegerField(blank=True, help_text='Показания э/счетчика на момент установки/приемки к учету в веб приложении', null=True, verbose_name='Однотарифный')),
                ('t1', models.PositiveIntegerField(blank=True, help_text='Показания э/счетчика тариф Т1 (день) на момент установки/приемки к учету в веб приложении', null=True, verbose_name='День')),
                ('t2', models.PositiveIntegerField(blank=True, help_text='Показания э/счетчика тариф Т2 (ночь) на момент установки/приемки к учету в веб приложении', null=True, verbose_name='Ночь')),
                ('land_plot', models.OneToOneField(help_text='Выберите участок', null=True, on_delete=django.db.models.deletion.SET_NULL, to='index.LandPlot', verbose_name='Участок')),
            ],
            options={
                'verbose_name': 'счетчик э/энергии',
                'verbose_name_plural': 'счетчики э/энергии',
            },
        ),
        migrations.CreateModel(
            name='ERate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True, help_text='Текущая дата будет использована автоматически для нового тарифа за электроэнергию', verbose_name='Дата')),
                ('s', models.DecimalField(decimal_places=2, help_text='Рублей за один кВт/ч для однотарифного э/счетчика', max_digits=7, verbose_name='Однотарифный')),
                ('t1', models.DecimalField(decimal_places=2, help_text='Рублей за один кВт/ч для тарифа Т1 (день)', max_digits=7, verbose_name='День')),
                ('t2', models.DecimalField(decimal_places=2, help_text='Рублей за один кВт/ч для тарифа Т2 (ночь)', max_digits=7, verbose_name='Ночь')),
                ('snt', models.ForeignKey(help_text='Выберите СНТ для которого будет применен тариф', null=True, on_delete=django.db.models.deletion.SET_NULL, to='index.Snt', verbose_name='СНТ')),
            ],
            options={
                'verbose_name': 'тариф за электроэнергию',
                'verbose_name_plural': 'тарифы за электроэнергию',
            },
        ),
        migrations.CreateModel(
            name='EPayment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_date', models.DateField(blank=True, help_text='Фактическая дата оплаты', null=True, verbose_name='Дата оплаты')),
                ('s_new', models.PositiveIntegerField(blank=True, help_text='Текущее показание э/счетчика (однотарифный) кВт/ч', null=True, verbose_name='Текущее показание (однотарифный)')),
                ('t1_new', models.PositiveIntegerField(blank=True, help_text='Текущее показание э/счетчика тариф Т1 (день) кВт/ч', null=True, verbose_name='Текущее показание (день)')),
                ('t2_new', models.PositiveIntegerField(blank=True, help_text='Текущее показание э/счетчика тариф Т2 (ночь) кВт/ч', null=True, verbose_name='Текущее показание (ночь)')),
                ('s_prev', models.PositiveIntegerField(blank=True, help_text='Предыдущее показание э/счетчика (однотарифный) кВт/ч', null=True, verbose_name='Предыдущее показание (однотарифный)')),
                ('t1_prev', models.PositiveIntegerField(blank=True, help_text='Предыдущее показание э/счетчика тариф Т1 (день) кВт/ч', null=True, verbose_name='Предыдущее показание (день)')),
                ('t2_prev', models.PositiveIntegerField(blank=True, help_text='Предыдущее показание э/счетчика тариф Т2 (ночь) кВт/ч', null=True, verbose_name='Предыдущее показание (ночь)')),
                ('s_cons', models.PositiveIntegerField(blank=True, help_text='Расход кВт/ч (однотарифный)', null=True, verbose_name='Расход (однотарифный)')),
                ('t1_cons', models.PositiveIntegerField(blank=True, help_text='Расход кВт/ч тариф Т1 (день)', null=True, verbose_name='Расход (день)')),
                ('t2_cons', models.PositiveIntegerField(blank=True, help_text='Расход кВт/ч тариф Т2 (ночь)', null=True, verbose_name='Расход (ночь)')),
                ('s_amount', models.DecimalField(blank=True, decimal_places=2, help_text='Сумма (однотарифный)', max_digits=7, null=True, verbose_name='Сумма (однотарифный)')),
                ('t1_amount', models.DecimalField(blank=True, decimal_places=2, help_text='Сумма тариф Т1 (день)', max_digits=7, null=True, verbose_name='Сумма (день)')),
                ('t2_amount', models.DecimalField(blank=True, decimal_places=2, help_text='Сумма тариф Т2 (ночь)', max_digits=7, null=True, verbose_name='Сумма (ночь)')),
                ('sum_total', models.DecimalField(decimal_places=2, help_text='Итого', max_digits=8, verbose_name='Итого')),
                ('status', models.CharField(choices=[('n', 'Неоплачено'), ('p', 'Оплачено'), ('c', 'Оплата подтверждена')], default='n', help_text='Статус оплаты', max_length=1, verbose_name='Статус')),
                ('land_plot', models.OneToOneField(help_text='Выберите участок', null=True, on_delete=django.db.models.deletion.SET_NULL, to='index.LandPlot', verbose_name='Участок')),
            ],
            options={
                'verbose_name': 'взнос за э/энергию',
                'verbose_name_plural': 'взонсы за э/энергию',
            },
        ),
        migrations.CreateModel(
            name='ECounterRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rec_date', models.DateField(auto_now_add=True, help_text='Текущая дата будет использована автоматически для сохранения показаний', verbose_name='Дата показаний')),
                ('s', models.PositiveIntegerField(blank=True, help_text='Внесите показания э/счетчика (однотарифный)', null=True, verbose_name='Однотарифный')),
                ('t1', models.PositiveIntegerField(blank=True, help_text='Внесите показания э/счетчика тариф Т1 (день)', null=True, verbose_name='День')),
                ('t2', models.PositiveIntegerField(blank=True, help_text='Внесите показания э/счетчика тариф Т2 (ночь)', null=True, verbose_name='Ночь')),
                ('e_counter', models.OneToOneField(help_text='Выберите счетчик', null=True, on_delete=django.db.models.deletion.SET_NULL, to='electricity.ECounter', verbose_name='Счетчик')),
                ('land_plot', models.OneToOneField(help_text='Выберите участок', null=True, on_delete=django.db.models.deletion.SET_NULL, to='index.LandPlot', verbose_name='Участок')),
            ],
            options={
                'verbose_name': 'показания э/счетчика',
                'verbose_name_plural': 'показания счетчиков',
            },
        ),
    ]
